digraph {
	labelloc="t";
	label="[['imp-testcases/non-interference/interproc/program.imp':29:41]]";
	"node0" [shape="rect",color="black",label=<h = 5<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>[inferred: HL, state: _|_] ]]<BR/>}} -&gt; [h]>];
	"node1" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node2" [shape="rect",color="gray",label=<&gt;(h, 5000)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: HL, state: _|_] ]]<BR/>}} -&gt; [h &gt; 5000]>];
	"node3" [shape="rect",color="gray",label=<l = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: HL] ]]<BR/>}} -&gt; [l]>];
	"node4" [shape="rect",color="gray",label=<l = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: _|_] ]]<BR/>}} -&gt; [l]>];
	"node5" [shape="rect",color="gray",label=<l = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: LL] ]]<BR/>}} -&gt; [l]>];
	"node6" [shape="rect",color="gray",label=<&gt;(Integrity::declassify(this, h), 5000)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: _|_] ]]<BR/>}} -&gt; [call_ret_value@'imp-testcases/non-interference/interproc/program.imp':21:23 &gt; 5000]>];
	"node7" [shape="rect",color="gray",label=<l = 1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: LL] ]]<BR/>}} -&gt; [l]>];
	"node8" [shape="rect",color="gray",label=<l = 1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ h: HL<BR/>l: LL<BR/>[inferred: LL, state: HL] ]]<BR/>}} -&gt; [l]>];
	"node0" -> "node4" [color="black"];
	"node2" -> "node3" [color="blue",style="dashed"];
	"node2" -> "node8" [color="red",style="dashed"];
	"node3" -> "node6" [color="black"];
	"node4" -> "node2" [color="black"];
	"node5" -> "node1" [color="black"];
	"node6" -> "node5" [color="blue",style="dashed"];
	"node6" -> "node7" [color="red",style="dashed"];
	"node7" -> "node1" [color="black"];
	"node8" -> "node6" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
