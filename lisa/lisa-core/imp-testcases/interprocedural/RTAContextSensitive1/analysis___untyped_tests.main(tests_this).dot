digraph {
	"node0" [shape="rect",color="black",label=<a = new A()<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[  ]]<BR/>}} -&gt; [a]>];
	"node1" [shape="rect",color="gray",label=<one = tests::getOne(a)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ one: + ]]<BR/>}} -&gt; [one]>];
	"node2" [shape="rect",color="gray",label=<positive2 = tests::getPositive(a, -1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ one: +<BR/>positive1: +<BR/>positive2: + ]]<BR/>}} -&gt; [positive2]>];
	"node3" [shape="rect",color="gray",label=<positive1 = tests::getPositive(a, one)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ one: +<BR/>positive1: + ]]<BR/>}} -&gt; [positive1]>];
	"node4" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ one: +<BR/>positive1: +<BR/>positive2: + ]]<BR/>}} -&gt; [skip]>];
	"node1" -> "node3" [color="black"];
	"node2" -> "node4" [color="black"];
	"node3" -> "node2" [color="black"];
	"node0" -> "node1" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
