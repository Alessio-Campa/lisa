digraph {
	"node0" [shape="rect",color="black",label=<xy = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$xy, 0)] ]]<BR/>}} -&gt; [vid$xy]>];
	"node1" [shape="rect",color="gray",label=<b = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$n, 7 * 3), (vid$xy, vid$z), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$b]>];
	"node2" [shape="rect",color="gray",label=<i = +(i, c)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$c, vid$xy + vid$y), (vid$i, vid$i + vid$c), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$i]>];
	"node3" [shape="rect",color="gray",label=<i = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$i, vid$xy + vid$y), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$i]>];
	"node4" [shape="rect",color="gray",label=<c = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$c, vid$xy + vid$y), (vid$i, vid$xy + vid$y), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$c]>];
	"node5" [shape="rect",color="gray",label=<b = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$xy, 0)] ]]<BR/>}} -&gt; [vid$b]>];
	"node6" [shape="rect",color="gray",label=<y = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$xy, 0), (vid$y, 0)] ]]<BR/>}} -&gt; [vid$y]>];
	"node7" [shape="rect",color="gray",label=<xy = 1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$n, 7 * 3), (vid$xy, 1), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$xy]>];
	"node8" [shape="rect",color="gray",label=<xy = z<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$n, 7 * 3), (vid$xy, vid$z), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$xy]>];
	"node9" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [skip]>];
	"node10" [shape="rect",color="gray",label=<b = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$n, 7 * 3), (vid$xy, 1), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$b]>];
	"node11" [shape="rect",color="gray",label=<d = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$d, vid$xy + vid$y), (vid$i, vid$xy + vid$y), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$d]>];
	"node12" [shape="rect",color="gray",label=<z = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$xy, 0), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$z]>];
	"node13" [shape="rect",color="gray",label=<a = +(xy, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$a, vid$xy + vid$y), (vid$b, 0), (vid$n, 7 * 3), (vid$xy, 0), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$a]>];
	"node14" [shape="rect",color="gray",label=<n = *(7, 3)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, 0), (vid$n, 7 * 3), (vid$xy, 0), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$n]>];
	"node15" [shape="rect",color="gray",label=<==(xy, 0)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$a, vid$xy + vid$y), (vid$b, 0), (vid$n, 7 * 3), (vid$xy, 0), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$xy == 0]>];
	"node16" [shape="rect",color="gray",label=<&lt;(i, n)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ [(vid$b, vid$xy + vid$y), (vid$i, vid$xy + vid$y), (vid$n, 7 * 3), (vid$y, 0), (vid$z, 0)] ]]<BR/>}} -&gt; [vid$i &lt; vid$n]>];
	"node1" -> "node3" [color="black"];
	"node2" -> "node9" [color="black"];
	"node3" -> "node16" [color="black"];
	"node4" -> "node2" [color="black"];
	"node5" -> "node6" [color="black"];
	"node6" -> "node12" [color="black"];
	"node7" -> "node10" [color="black"];
	"node8" -> "node1" [color="black"];
	"node10" -> "node3" [color="black"];
	"node11" -> "node9" [color="black"];
	"node0" -> "node5" [color="black"];
	"node12" -> "node14" [color="black"];
	"node13" -> "node15" [color="black"];
	"node14" -> "node13" [color="black"];
	"node15" -> "node8" [color="blue",style="dashed"];
	"node15" -> "node7" [color="red",style="dashed"];
	"node16" -> "node11" [color="red",style="dashed"];
	"node16" -> "node4" [color="blue",style="dashed"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
