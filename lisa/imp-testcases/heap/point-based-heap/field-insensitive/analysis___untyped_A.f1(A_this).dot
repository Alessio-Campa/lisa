digraph {
	"node0" [shape="rect",color="black",label=<o1 = new(1, 2)<BR/>{{<BR/>heap [[ [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20] ]]<BR/>value [[ vid$o1: #TOP# ]]<BR/>}} -&gt; [vid$o1]>];
	"node1" [shape="rect",color="gray",label=<o1::a = 1<BR/>{{<BR/>heap [[ [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20] ]]<BR/>value [[ hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20: [1, 1]<BR/>vid$o1: #TOP# ]]<BR/>}} -&gt; [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20]>];
	"node2" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20] ]]<BR/>value [[ hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20: [1, 3]<BR/>vid$o1: #TOP# ]]<BR/>}} -&gt; [skip]>];
	"node3" [shape="rect",color="gray",label=<o1::b = 2<BR/>{{<BR/>heap [[ [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20] ]]<BR/>value [[ hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20: [1, 2]<BR/>vid$o1: #TOP# ]]<BR/>}} -&gt; [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20]>];
	"node4" [shape="rect",color="gray",label=<o1::a = +(o1::b, 1)<BR/>{{<BR/>heap [[ [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20] ]]<BR/>value [[ hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20: [1, 3]<BR/>vid$o1: #TOP# ]]<BR/>}} -&gt; [hid$pp@'imp-testcases/heap/point-based-heap/field-insensitive/program.imp':6:20]>];
	"node0" -> "node1" [color="black"];
	"node1" -> "node3" [color="black"];
	"node3" -> "node4" [color="black"];
	"node4" -> "node2" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
