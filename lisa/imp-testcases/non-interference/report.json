{
	"warnings": [
		{
			"message": "['imp-testcases/non-interference/program.imp':101:9] on 'untyped Test::lecture_18_2(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':131:8] on 'untyped Test::lecture_19_4(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':139:9] on 'untyped Test::lecture_19_5(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':141:9] on 'untyped Test::lecture_19_5(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':24:17] on 'untyped Test::loop(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':24:17] on 'untyped Test::loop(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':35:17] on 'untyped Test::afterLoop(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':35:17] on 'untyped Test::afterLoop(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':44:12] on 'untyped Test::lecture_5_1(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':49:16] on 'untyped Test::lecture_5_2(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':56:9] on 'untyped Test::lecture_6(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':58:9] on 'untyped Test::lecture_6(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':66:15] on 'untyped Test::lecture_7(Test this)': [EXPRESSION] This assignment, located in a HIGH block, assigns a LOW variable, thus violating non-interference"
		},
		{
			"message": "['imp-testcases/non-interference/program.imp':88:12] on 'untyped Test::lecture_17(Test this)': [EXPRESSION] This assignment assigns a HIGH value to LOW variable, thus violating non-interference"
		}
	],
	"files": [
		"analysis___untyped_Test.afterLoop(Test_this).dot",
		"analysis___untyped_Test.branch(Test_this).dot",
		"analysis___untyped_Test.foo(Test_this).dot",
		"analysis___untyped_Test.lecture_16(Test_this).dot",
		"analysis___untyped_Test.lecture_17(Test_this).dot",
		"analysis___untyped_Test.lecture_18_1(Test_this).dot",
		"analysis___untyped_Test.lecture_18_2(Test_this).dot",
		"analysis___untyped_Test.lecture_19_1(Test_this).dot",
		"analysis___untyped_Test.lecture_19_2(Test_this).dot",
		"analysis___untyped_Test.lecture_19_3(Test_this).dot",
		"analysis___untyped_Test.lecture_19_4(Test_this).dot",
		"analysis___untyped_Test.lecture_19_5(Test_this).dot",
		"analysis___untyped_Test.lecture_5_1(Test_this).dot",
		"analysis___untyped_Test.lecture_5_2(Test_this).dot",
		"analysis___untyped_Test.lecture_6(Test_this).dot",
		"analysis___untyped_Test.lecture_7(Test_this).dot",
		"analysis___untyped_Test.lecture_8(Test_this).dot",
		"analysis___untyped_Test.loop(Test_this).dot"
	]
}