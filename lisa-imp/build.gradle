plugins {
	id 'java-library'
    id 'eclipse'
    id 'antlr'
    
    // automatic generation of plantuml files from the source code
    // for visualizing them: https://www.planttext.com/
    id 'com.github.roroche.plantuml'
	id 'org.fmiw.plantuml'
    
    // parse git information during the build
    id 'org.ajoberstar.grgit'
    
    // code formatting task -- spotlessCheck for checking, spotlessApply for applying
    // javadoc checking - coding conventions
    id 'com.diffplug.spotless'
    id 'checkstyle'
    
    // this enables './gradlew <task> taskTree' to show task dependencies
    id 'com.dorongold.task-tree'
    
    // publication on maven central
    id 'maven-publish'
    id 'signing'
    
    // coverage reports
    id 'jacoco'
}

dependencies {
	api project(':lisa-sdk')

	// parser generation
	antlr 'org.antlr:antlr4:4.8-1'
	
	// testing
    testImplementation 'junit:junit:4.12'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-no-listener"]
    
    doLast {
    	copy {
      		from 'build/generated-src/antlr/main/'
      		include '*.*'
      		into 'build/generated-src/antlr/main/it/unive/lisa/imp/antlr'
    	}
   		project.delete fileTree('build/generated-src/antlr/main').include('*.*')
  	}
}

apply from: '../code-style.gradle'
apply from: '../doc-extra.gradle'
apply from: '../java.gradle'
apply from: '../publishing.gradle'

